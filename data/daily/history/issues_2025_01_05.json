[
  {
    "id": "I_kwDOMT5cIs6lD_MP",
    "number": 1871,
    "title": "Failed to use Gaianet model",
    "body": "**Describe the bug**\r\n\r\nI can't run with Gaianet model.\r\n\r\n**To Reproduce**\r\n\r\n`eliza v0.1.6` and build Docker image with Dockerfile.\r\nCreated `mainCharacter.ts` under `eliza/agent` path:\r\n```ts\r\nimport { Character, ModelProviderName, defaultCharacter, Clients } from \"@ai16z/eliza\";\r\n\r\nexport const mainCharacter: Character = {\r\n    ...defaultCharacter,\r\n    clients: [Clients.TWITTER],\r\n    modelProvider: ModelProviderName.GAIANET,\r\n    name: \"agent_cognitive\"\r\n}\r\n```\r\nand import correctly on `eliza/agent/index.ts`\r\n\r\nEdited `.env` with [Gaianet public qwen-72b node configuration](https://docs.gaianet.ai/user-guide/nodes#qwen-72b):\r\n```bash\r\n# Gaianet Configuration\r\nGAIANET_MODEL=qwen72b\r\nGAIANET_SERVER_URL=https://qwen72b.gaia.domains/v1\r\n\r\nSMALL_GAIANET_MODEL=            # Default: llama3b\r\nSMALL_GAIANET_SERVER_URL=       # Default: https://llama3b.gaia.domains/v1\r\nMEDIUM_GAIANET_MODEL=           # Default: llama\r\nMEDIUM_GAIANET_SERVER_URL=      # Default: https://llama8b.gaia.domains/v1\r\nLARGE_GAIANET_MODEL=            # Default: qwen72b\r\nLARGE_GAIANET_SERVER_URL=       # Default: https://qwen72b.gaia.domains/v1\r\n\r\nGAIANET_EMBEDDING_MODEL=nomic-embed\r\nUSE_GAIANET_EMBEDDING=TRUE          # Set to TRUE for GAIANET/768, leave blank for local\r\n```\r\n\r\nBut when I use with OPENAI `modelProvider: ModelProviderName.OPENAI,` with my own API KEY works.\r\n\r\n**Expected behavior**\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n**Screenshots**\r\n\r\n```\r\nroot@bbdaab54374e:/app# pnpm start\r\n\r\n> eliza@ start /app\r\n> pnpm --filter \"@ai16z/agent\" start --isRoot\r\n\r\n\r\n> @ai16z/agent@0.1.6 start /app/agent\r\n> node --loader ts-node/esm src/index.ts \"--isRoot\"\r\n\r\n(node:32) ExperimentalWarning: `--experimental-loader` may be removed in the future; instead use `register()`:\r\n--import 'data:text/javascript,import { register } from \"node:module\"; import { pathToFileURL } from \"node:url\"; register(\"ts-node/esm\", pathToFileURL(\"./\"));'\r\n(Use `node --trace-warnings ...` to show where the warning was created)\r\n(node:32) [DEP0180] DeprecationWarning: fs.Stats constructor is deprecated.\r\n(Use `node --trace-deprecation ...` to show where the warning was created)\r\n[ElizaLogger] Initializing with:\r\n            isNode: true\r\n            verbose: false\r\n            VERBOSE env: undefined\r\n            NODE_ENV: undefined\r\n        \r\n ℹ INFORMATIONS\r\n   Loading embedding settings: \r\n   {\"USE_OPENAI_EMBEDDING\":\"\",\"USE_OLLAMA_EMBEDDING\":\"\",\"OLLAMA_EMBEDDING_MODEL\":\"mxbai-embed-large\"} \r\n\r\n ℹ INFORMATIONS\r\n   Loading character settings: \r\n   {\"ARGV\":[\"/usr/local/bin/node\",\"/app/agent/src/index.ts\",\"--isRoot\"],\"CWD\":\"/app/agent\"} \r\n\r\nLoaded .env file from: /app/.env\r\n ℹ INFORMATIONS\r\n   Parsed settings: \r\n   {\"USE_OPENAI_EMBEDDING\":\"\",\"USE_OPENAI_EMBEDDING_TYPE\":\"string\",\"USE_OLLAMA_EMBEDDING\":\"\",\"USE_OLLAMA_EMBEDDING_TYPE\":\"string\",\"OLLAMA_EMBEDDING_MODEL\":\"mxbai-embed-large\"} \r\n\r\n(node:32) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.\r\n [\"◎ DirectClient constructor\"] \r\n\r\n [\"⛔ Failed to get token - unsupported model provider: gaianet\"] \r\n\r\n ⛔ ERRORS\r\n   Error starting agent for character agent_cognitive: \r\n   {} \r\n\r\n [\"⛔ Error: Failed to get token - unsupported model provider: gaianet\"] \r\n\r\n ⛔ ERRORS\r\n   Error starting agents: \r\n   {} \r\n\r\n [\"◎ Run `pnpm start:client` to start the client and visit the outputted URL (http://localhost:5173) to chat with your agents\"] \r\n\r\n [\"✓ REST API bound to 0.0.0.0:3000. If running locally, access it at http://localhost:3000.\"] \r\n\r\n^C [\"◎ Received shutdown signal, closing server...\"] \r\n\r\n [\"✓ Server closed successfully\"] \r\n\r\n```\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
    "state": "CLOSED",
    "createdAt": "2025-01-05T13:54:33Z",
    "updatedAt": "2025-01-05T16:56:12Z",
    "author": {
      "login": "djpg",
      "avatarUrl": "https://avatars.githubusercontent.com/u/25202539?u=8c804eb1671859cdbae7c8aa3b39cf2378b0c0d1&v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qWA",
        "name": "bug",
        "color": "d73a4a",
        "description": "Something isn't working"
      }
    ],
    "comments": [
      {
        "id": "IC_kwDOMT5cIs6ZSJRc",
        "author": "djpg",
        "body": "I'm able to use Gaia with eliza v0.1.7 and Gaianet configuration:\r\n\r\n```\r\n# Gaianet Configuration\r\nGAIANET_MODEL=llama3b\r\nGAIANET_SERVER_URL=https://llama3b.gaia.domains/v1\r\n\r\nSMALL_GAIANET_MODEL=            # Default: llama3b\r\nSMALL_GAIANET_SERVER_URL=       # Default: https://llama3b.gaia.domains/v1\r\nMEDIUM_GAIANET_MODEL=           # Default: llama\r\nMEDIUM_GAIANET_SERVER_URL=      # Default: https://llama8b.gaia.domains/v1\r\nLARGE_GAIANET_MODEL=            # Default: qwen72b\r\nLARGE_GAIANET_SERVER_URL=       # Default: https://qwen72b.gaia.domains/v1\r\n\r\nGAIANET_EMBEDDING_MODEL=nomic-embed\r\nUSE_GAIANET_EMBEDDING=TRUE          # Set to TRUE for GAIANET/768, leave blank for local\r\n```"
      },
      {
        "id": "IC_kwDOMT5cIs6ZSNiW",
        "author": "tcm390",
        "body": "Yes, non-tiktoken model should be supported in the latest release "
      }
    ]
  },
  {
    "id": "I_kwDOMT5cIs6lD-ib",
    "number": 1870,
    "title": "Eliza throws embeddings error on http://localhost:3000 access.",
    "body": "**Describe the bug**\r\n\r\nWhen attempting to access the REST API via a python script, I get the following error, and termination of eliza process. \r\n\r\n```\r\nfile:///C:/Users/bryan/Desktop/eliza/packages/core/dist/index.js:29031\r\n            throw new Error(\"Cannot generate embedding: Memory content is empty\");\r\n                  ^\r\n\r\nError: Cannot generate embedding: Memory content is empty\r\n    at MemoryManager.addEmbeddingToMemory (file:///C:/Users/bryan/Desktop/eliza/packages/core/dist/index.js:29031:19)\r\n    at file:///C:/Users/bryan/Desktop/eliza/packages/client-direct/dist/index.js:302:42\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\r\n\r\nNode.js v22.12.0\r\nC:\\Users\\bryan\\Desktop\\eliza\\agent:\r\n ERR_PNPM_RECURSIVE_RUN_FIRST_FAIL  @elizaos/agent@0.1.7 start: `node --loader ts-node/esm src/index.ts \"--isRoot\" \"--character=characters/trump.character.json\"`\r\nExit status 1\r\n ELIFECYCLE  Command failed with exit code 1.\r\n```\r\n\r\n**To Reproduce**\r\n\r\n`pnpm start --character=\"characters/trump.character.json\"`\r\n\r\nrun code:\r\n```\r\n\r\nimport requests\r\n\r\ndef test_direct_message():\r\n    agent_id = \"e0e10e6f-ff2b-0d4c-8011-1fc1eee7cb32\"\r\n    url = f\"http://localhost:3000/{agent_id}/message\"\r\n\r\n    payload = {\r\n        \"message\": \"Hello!\"\r\n    }\r\n\r\n    try:\r\n        response = requests.post(url, json=payload)\r\n        print(\"Status Code:\", response.status_code)\r\n        print(\"Response JSON:\", response.json())\r\n    except requests.exceptions.RequestException as e:\r\n        print(\"Request failed:\", e)\r\n\r\nif __name__ == \"__main__\":\r\n    test_direct_message()\r\n```\r\n\r\n**Expected behavior**\r\n\r\nI expect a chat response\r\n\r\n**Screenshots**\r\n\r\n![Screenshot 2025-01-05 054035](https://github.com/user-attachments/assets/a7f324e6-3365-4622-a53e-e744f93e94af)\r\n\r\n\r\n**Additional context**\r\n\r\nI am attempting to implement Eliza in my Orifice ai product to claim the bounty.\r\n",
    "state": "OPEN",
    "createdAt": "2025-01-05T13:48:03Z",
    "updatedAt": "2025-01-05T20:43:17Z",
    "author": {
      "login": "Bryan-Orifice",
      "avatarUrl": "https://avatars.githubusercontent.com/u/174651881?v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qWA",
        "name": "bug",
        "color": "d73a4a",
        "description": "Something isn't working"
      }
    ],
    "comments": [
      {
        "id": "IC_kwDOMT5cIs6ZSAGt",
        "author": "github-actions",
        "body": "Hello @Bryan-Orifice! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      },
      {
        "id": "IC_kwDOMT5cIs6ZSbic",
        "author": "JoeyKhd",
        "body": "Hi @Bryan-Orifice \r\n\r\nAccording to this file: https://github.com/elizaOS/eliza/blob/ea9d1c02291dea26b25c815be30db5c91e6ceb21/docs/docs/packages/agents.md?plain=1#L210\r\n\r\nThe payload should be:\r\n\r\n```\r\n{\r\n  text: input,\r\n  userId: \"user\",\r\n  userName: \"User\",\r\n}\r\n```\r\n\r\nPlease give it a go.\r\n\r\nAlso this does not seem like an Eliza related error, but rather an error from your side."
      }
    ]
  },
  {
    "id": "I_kwDOMT5cIs6lDoag",
    "number": 1866,
    "title": "Algorand Blockchain Integration Plugin",
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nAlgorand is one of few blockchain candidates when it comes to ML/AI requirements so it is essential to add Algorand Integration to Eliza.\r\n\r\n**Describe the solution you'd like**\r\n\r\nI created this issue to use it in Branch naming for my PR which adds Algorand Integration plugin using standard Algorand SDK and APIs.\r\n\r\n",
    "state": "OPEN",
    "createdAt": "2025-01-05T09:39:18Z",
    "updatedAt": "2025-01-05T09:39:44Z",
    "author": {
      "login": "emg110",
      "avatarUrl": "https://avatars.githubusercontent.com/u/1900448?u=a230ac55c0ac7fa435a2b35b75cb9ff6272a0836&v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qYA",
        "name": "enhancement",
        "color": "a2eeef",
        "description": "New feature or request"
      }
    ],
    "comments": [
      {
        "id": "IC_kwDOMT5cIs6ZRvUd",
        "author": "github-actions",
        "body": "Hello @emg110! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      }
    ]
  },
  {
    "id": "I_kwDOMT5cIs6lDka3",
    "number": 1864,
    "title": "browser+client",
    "body": "**Describe the bug**\r\n\r\nResponses to chat in browser come on console 1\r\n\r\n**Steps to reproduce the behavior**\r\n\r\n* git pull\r\n* checkout v0.1.7\r\n* pnpm install\r\n* pnpm build\r\n* pnpm run start (console 1)\r\n* pnpm run start:client (console 2)\r\n* click localhost browser link\r\n* choose Eliza in browser\r\n* click chat in browser\r\n* enter \"show me your tits\" or another text of your own choosing\r\n* responses are now shown in console 1 (also 'div's that clearly should go in  a browser)\r\n\r\n**Expected behavior**\r\n\r\nI would believe responses were supposed to go in the browser\r\n\r\n**Screenshots**\r\n\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
    "state": "OPEN",
    "createdAt": "2025-01-05T08:49:48Z",
    "updatedAt": "2025-01-05T20:46:42Z",
    "author": {
      "login": "info3284",
      "avatarUrl": "https://avatars.githubusercontent.com/u/147299592?v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qWA",
        "name": "bug",
        "color": "d73a4a",
        "description": "Something isn't working"
      }
    ],
    "comments": [
      {
        "id": "IC_kwDOMT5cIs6ZRr6y",
        "author": "github-actions",
        "body": "Hello @info3284! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      },
      {
        "id": "IC_kwDOMT5cIs6ZSbxT",
        "author": "JoeyKhd",
        "body": "It's logical that you will see the messages in console 1 as that's where your agent is processing things coming from the frontend (console 2). Console 2 in your case is nothing but Vite booting up the frontend.\r\n\r\nI don't see any issue here. "
      }
    ]
  },
  {
    "id": "I_kwDOMT5cIs6lDjT2",
    "number": 1862,
    "title": "Code Analysis Report: Security Issues and Vulnerabilities of Eliza",
    "body": "# Code Analysis Report: Security Issues and Vulnerabilities\r\n\r\n## Critical Issues\r\n\r\n### 1. Insecure Secret Management\r\n**Location**: `getTokenForProvider()` function and environment variable handling\r\n**Impact**: Critical\r\n**Description**: The code exposes multiple API keys and sensitive credentials through environment variables without proper encryption or secure storage.\r\n```typescript\r\nreturn (\r\n    character.settings?.secrets?.OPENAI_API_KEY ||\r\n    settings.OPENAI_API_KEY\r\n);\r\n```\r\n**Potential Damage**: \r\n- Unauthorized access to API services\r\n- Financial losses through compromised payment APIs\r\n- Data breaches through exposed API keys\r\n- Potential lateral movement in infrastructure\r\n\r\n### 2. Insufficient Error Handling\r\n**Location**: Multiple instances throughout the code\r\n**Impact**: High\r\n**Example**:\r\n```typescript\r\ndb.init()\r\n    .then(() => {\r\n        elizaLogger.success(\"Successfully connected to PostgreSQL database\");\r\n    })\r\n    .catch((error) => {\r\n        elizaLogger.error(\"Failed to connect to PostgreSQL:\", error);\r\n    });\r\n```\r\n**Issues**:\r\n- No proper error recovery mechanism\r\n- Continues execution after critical failures\r\n- Incomplete error information logging\r\n- No distinction between different types of database errors\r\n\r\n### 3. Unsafe File Operations\r\n**Location**: `loadCharacters()` function\r\n**Impact**: High\r\n**Vulnerability**:\r\n```typescript\r\nconst content = tryLoadFile(tryPath);\r\nif (content !== null) {\r\n    resolvedPath = tryPath;\r\n    break;\r\n}\r\n```\r\n**Risks**:\r\n- Directory traversal attacks\r\n- File system access outside intended directories\r\n- Race conditions in file operations\r\n- No file content validation before parsing\r\n\r\n### 4. Insecure Database Initialization\r\n**Location**: `initializeDatabase()` function\r\n**Impact**: High\r\n**Issue**:\r\n```typescript\r\nif (process.env.POSTGRES_URL) {\r\n    const db = new PostgresDatabaseAdapter({\r\n        connectionString: process.env.POSTGRES_URL,\r\n        parseInputs: true,\r\n    });\r\n}\r\n```\r\n**Vulnerabilities**:\r\n- No connection pooling\r\n- Unencrypted database URLs in environment\r\n- No SSL/TLS enforcement\r\n- SQL injection risks with parseInputs:true\r\n\r\n### 5. Unvalidated Plugin Loading\r\n**Location**: Character loading and plugin initialization\r\n**Impact**: Critical\r\n**Vulnerability**:\r\n```typescript\r\nconst importedPlugins = await Promise.all(\r\n    character.plugins.map(async (plugin) => {\r\n        const importedPlugin = await import(plugin);\r\n        return importedPlugin.default;\r\n    })\r\n);\r\n```\r\n**Risks**:\r\n- Remote code execution through malicious plugins\r\n- Memory leaks from unmanaged plugin resources\r\n- System compromise through untrusted code execution\r\n- No plugin signature verification\r\n\r\n## Moderate Issues\r\n\r\n### 6. Insufficient Input Validation\r\n**Location**: Throughout client initialization\r\n**Impact**: Moderate\r\n**Example**:\r\n```typescript\r\nconst clientTypes: string[] = character.clients?.map((str) => str.toLowerCase()) || [];\r\n```\r\n**Issues**:\r\n- No validation of client type strings\r\n- Potential prototype pollution\r\n- Missing input sanitization\r\n- Undefined behavior with invalid inputs\r\n\r\n### 7. Inadequate Logging\r\n**Location**: Throughout the codebase\r\n**Impact**: Moderate\r\n**Issue**:\r\n```typescript\r\nelizaLogger.debug(`Fetching ${url}`);\r\n```\r\n**Problems**:\r\n- Inconsistent logging levels\r\n- Potential sensitive data exposure in logs\r\n- No log rotation mechanism\r\n- Missing structured logging format\r\n\r\n### 8. Port Security Issues\r\n**Location**: `checkPortAvailable()` and server initialization\r\n**Impact**: Moderate\r\n**Vulnerability**:\r\n```typescript\r\nwhile (!(await checkPortAvailable(serverPort))) {\r\n    serverPort++;\r\n}\r\n```\r\n**Risks**:\r\n- Port scanning vulnerabilities\r\n- Race conditions in port binding\r\n- No maximum port limit\r\n- Potential privilege escalation\r\n\r\n## Minor Issues\r\n\r\n### 9. Memory Management\r\n**Location**: Cache initialization and management\r\n**Impact**: Low\r\n**Issue**: No explicit memory limits or cleanup mechanisms for cache storage\r\n\r\n### 10. Type Safety Issues\r\n**Location**: Throughout the codebase\r\n**Impact**: Low\r\n**Example**: Loose type checking in multiple functions and implicit any types\r\n\r\n## Performance Issues\r\n\r\n### 11. Resource Management\r\n**Impact**: Moderate\r\n- No connection pooling for databases\r\n- Unbounded cache growth potential\r\n- No rate limiting for API calls\r\n- Uncontrolled concurrent operations\r\n\r\n### 12. Scaling Limitations\r\n**Impact**: Moderate\r\n- Single-threaded operation for critical paths\r\n- No horizontal scaling capabilities\r\n- Potential memory leaks in long-running operations\r\n- No backup or failover mechanisms\r\n\r\n## Impact Assessment Matrix\r\n\r\n| Issue | Likelihood | Impact | Risk Score |\r\n|-------|------------|--------|------------|\r\n| Secret Management | High | Critical | 10 |\r\n| Error Handling | High | High | 8 |\r\n| File Operations | Medium | High | 7 |\r\n| Database Security | High | High | 8 |\r\n| Plugin Security | Medium | Critical | 9 |\r\n\r\n## Statistics\r\n- Total Critical Issues: 5\r\n- Total High Impact Issues: 3\r\n- Total Moderate Issues: 4\r\n- Total Minor Issues: 2\r\n- Total Performance Issues: 2\r\n\r\nEach issue requires immediate attention based on its risk score and potential impact on system security and stability.",
    "state": "OPEN",
    "createdAt": "2025-01-05T08:34:21Z",
    "updatedAt": "2025-01-05T21:44:55Z",
    "author": {
      "login": "kyegomez",
      "avatarUrl": "https://avatars.githubusercontent.com/u/98760976?u=f25264ee0fd2e64f222b66e8b8d5dff2fad18268&v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qWA",
        "name": "bug",
        "color": "d73a4a",
        "description": "Something isn't working"
      }
    ],
    "comments": [
      {
        "id": "IC_kwDOMT5cIs6ZRrDp",
        "author": "github-actions",
        "body": "Hello @kyegomez! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      },
      {
        "id": "IC_kwDOMT5cIs6ZSIHX",
        "author": "Tburm",
        "body": "This is AI slop. "
      },
      {
        "id": "IC_kwDOMT5cIs6ZSdWI",
        "author": "manotoor",
        "body": "looks like AI dump. \r\n\r\nExample...\r\n\r\n```\r\n6. Insufficient Input Validation\r\nLocation: Throughout client initialization\r\nImpact: Moderate\r\nExample:\r\n\r\nconst clientTypes: string[] = character.clients?.map((str) => str.toLowerCase()) || [];\r\n```\r\n\r\nThis is all ran from host it think it's client input "
      },
      {
        "id": "IC_kwDOMT5cIs6ZSfMm",
        "author": "JoeyKhd",
        "body": "when you order an audit from aliexpress"
      }
    ]
  },
  {
    "id": "I_kwDOMT5cIs6lDam7",
    "number": 1859,
    "title": "Generating new tweet issue",
    "body": "**Describe the bug**\r\n\r\nive got eliza loaded up, logged in, twitter is recognizing the log in, but when it goes to generate a tweet it shows \"error generating new tweet\" in the terminal\r\n\r\n**To Reproduce**\r\n\r\nWhen running eliza\r\n\r\n**Expected behavior**\r\n\r\nA tweet generated\r\n\r\n**Screenshots**\r\n\r\n![image](https://github.com/user-attachments/assets/1907cdfb-a6ec-401f-a378-fe0a54891137)\r\n\r\n\r\n**Additional context**\r\n\r\nJust trying to trouble shoot this issue\r\n",
    "state": "OPEN",
    "createdAt": "2025-01-05T06:22:33Z",
    "updatedAt": "2025-01-05T15:17:07Z",
    "author": {
      "login": "Chillbruhhh",
      "avatarUrl": "https://avatars.githubusercontent.com/u/191831326?v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qWA",
        "name": "bug",
        "color": "d73a4a",
        "description": "Something isn't working"
      }
    ],
    "comments": [
      {
        "id": "IC_kwDOMT5cIs6ZRkCh",
        "author": "github-actions",
        "body": "Hello @Chillbruhhh! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      },
      {
        "id": "IC_kwDOMT5cIs6ZSGrN",
        "author": "azomland",
        "body": "<img width=\"1095\" alt=\"Captura de pantalla 2025-01-05 a las 12 15 50\" src=\"https://github.com/user-attachments/assets/105d160f-e236-4e34-befe-92593f8a70a6\" />\r\nhere I am having problems to start the X account, I have changed the type of account to automated, but still..."
      }
    ]
  },
  {
    "id": "I_kwDOMT5cIs6lDLer",
    "number": 1857,
    "title": "A",
    "body": "**Describe the bug**\n\n<!-- A clear and concise description of what the bug is. -->\n\n**To Reproduce**\n\n<!-- Steps to reproduce the behavior. -->\n\n**Expected behavior**\n\n<!-- A clear and concise description of what you expected to happen. -->\n\n**Screenshots**\n\n<!-- If applicable, add screenshots to help explain your problem. -->\n\n**Additional context**\n\n<!-- Add any other context about the problem here. -->",
    "state": "CLOSED",
    "createdAt": "2025-01-05T01:51:17Z",
    "updatedAt": "2025-01-05T03:05:44Z",
    "author": {
      "login": "aalonso777777",
      "avatarUrl": "https://avatars.githubusercontent.com/u/192977773?v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qWA",
        "name": "bug",
        "color": "d73a4a",
        "description": "Something isn't working"
      }
    ],
    "comments": [
      {
        "id": "IC_kwDOMT5cIs6ZRXm6",
        "author": "github-actions",
        "body": "Hello @aalonso777777! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      }
    ]
  },
  {
    "id": "I_kwDOMT5cIs6lDIOw",
    "number": 1856,
    "title": "Implement more granular try-catch blocks in /plugin-coinbase",
    "body": "**Is your feature request related to a problem? Please describe.**\n\nThe current error handling in the /plugin-coinbase directory lacks granularity, making it difficult to identify specific failures in the transaction process.\n\n**Describe the solution you'd like**\n\nImplement more granular try-catch blocks throughout the /plugin-coinbase code to improve error handling and logging. This would allow for more detailed error messages and better debugging capabilities.\n\n**Code Example**\n\n```javascript\ntry {\n    // Code that may throw an error\n} catch (error) {\n    console.error('Specific error message:', error);\n    // Handle specific error\n}\n```\n\n**Describe alternatives you've considered**\n\nLeaving the current error handling as is, but this may lead to difficulty in troubleshooting issues.\n\n**Additional context**\n\nImproved error handling will enhance the reliability of the plugin and provide clearer insights during failures, ultimately leading to a better user experience.",
    "state": "CLOSED",
    "createdAt": "2025-01-05T00:53:44Z",
    "updatedAt": "2025-01-05T01:46:28Z",
    "author": {
      "login": "monilpat",
      "avatarUrl": "https://avatars.githubusercontent.com/u/15067321?v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qYA",
        "name": "enhancement",
        "color": "a2eeef",
        "description": "New feature or request"
      },
      {
        "id": "LA_kwDOMT5cIs8AAAAB2WU2Jw",
        "name": "agent-generated",
        "color": "FBCA04",
        "description": "For agent creation actions on pull requests, issues, and eventually milestones, releases etc."
      },
      {
        "id": "LA_kwDOMT5cIs8AAAAB2qdBFw",
        "name": "error handling",
        "color": "ededed",
        "description": null
      }
    ],
    "comments": []
  },
  {
    "id": "I_kwDOMT5cIs6lDIIq",
    "number": 1854,
    "title": "Implement more granular try-catch blocks in /plugin-coinbase",
    "body": "**Is your feature request related to a problem? Please describe.**\n\nThe current error handling in the /plugin-coinbase directory lacks granularity, making it difficult to identify specific failures in the transaction process.\n\n**Describe the solution you'd like**\n\nImplement more granular try-catch blocks throughout the /plugin-coinbase code to improve error handling and logging. This would allow for more detailed error messages and better debugging capabilities.\n\n**Code Example**\n\n```javascript\ntry {\n    // Code that may throw an error\n} catch (error) {\n    console.error('Specific error message:', error);\n    // Handle specific error\n}\n```\n\n**Describe alternatives you've considered**\n\nLeaving the current error handling as is, but this may lead to difficulty in troubleshooting issues.\n\n**Additional context**\n\nImproved error handling will enhance the reliability of the plugin and provide clearer insights during failures, ultimately leading to a better user experience.",
    "state": "CLOSED",
    "createdAt": "2025-01-05T00:51:54Z",
    "updatedAt": "2025-01-05T06:38:20Z",
    "author": {
      "login": "monilpat",
      "avatarUrl": "https://avatars.githubusercontent.com/u/15067321?v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qYA",
        "name": "enhancement",
        "color": "a2eeef",
        "description": "New feature or request"
      },
      {
        "id": "LA_kwDOMT5cIs8AAAAB2WU2Jw",
        "name": "agent-generated",
        "color": "FBCA04",
        "description": "For agent creation actions on pull requests, issues, and eventually milestones, releases etc."
      },
      {
        "id": "LA_kwDOMT5cIs8AAAAB2qdBFw",
        "name": "error handling",
        "color": "ededed",
        "description": null
      }
    ],
    "comments": []
  },
  {
    "id": "I_kwDOMT5cIs6lDHNI",
    "number": 1851,
    "title": "Implement more granular try-catch blocks in /plugin-coinbase to improve error handling",
    "body": "**Is your feature request related to a problem? Please describe.**\n\nThe current error handling in the /plugin-coinbase directory lacks granularity, making it difficult to identify specific failures in the transaction process.\n\n**Describe the solution you'd like**\n\nImplement more granular try-catch blocks throughout the /plugin-coinbase code to improve error handling and logging. This would allow for more detailed error messages and better debugging capabilities.\n\n**Code Example**\n\n```javascript\ntry {\n    // Code that may throw an error\n} catch (error) {\n    console.error('Specific error message:', error);\n    // Handle specific error\n}\n```\n\n**Describe alternatives you've considered**\n\nLeaving the current error handling as is, but this may lead to difficulty in troubleshooting issues.\n\n**Additional context**\n\nImproved error handling will enhance the reliability of the plugin and provide clearer insights during failures, ultimately leading to a better user experience.",
    "state": "CLOSED",
    "createdAt": "2025-01-05T00:35:46Z",
    "updatedAt": "2025-01-05T01:46:01Z",
    "author": {
      "login": "monilpat",
      "avatarUrl": "https://avatars.githubusercontent.com/u/15067321?v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qYA",
        "name": "enhancement",
        "color": "a2eeef",
        "description": "New feature or request"
      },
      {
        "id": "LA_kwDOMT5cIs8AAAAB2WU2Jw",
        "name": "agent-generated",
        "color": "FBCA04",
        "description": "For agent creation actions on pull requests, issues, and eventually milestones, releases etc."
      },
      {
        "id": "LA_kwDOMT5cIs8AAAAB2qdBFw",
        "name": "error handling",
        "color": "ededed",
        "description": null
      }
    ],
    "comments": []
  },
  {
    "id": "I_kwDOMT5cIs6lDGPW",
    "number": 1849,
    "title": "Implement more granular try-catch blocks in /plugin-coinbase to improve error handling",
    "body": "**Is your feature request related to a problem? Please describe.**\n\nThe current error handling in the /plugin-coinbase directory lacks granularity, making it difficult to identify specific failures in the transaction process.\n\n**Describe the solution you'd like**\n\nImplement more granular try-catch blocks throughout the /plugin-coinbase code to improve error handling and logging. This would allow for more detailed error messages and better debugging capabilities.\n\n**Code Example**\n\n```javascript\ntry {\n    // Code that may throw an error\n} catch (error) {\n    console.error('Specific error message:', error);\n    // Handle specific error\n}\n```\n\n**Describe alternatives you've considered**\n\nLeaving the current error handling as is, but this may lead to difficulty in troubleshooting issues.\n\n**Additional context**\n\nImproved error handling will enhance the reliability of the plugin and provide clearer insights during failures, ultimately leading to a better user experience.",
    "state": "CLOSED",
    "createdAt": "2025-01-05T00:23:04Z",
    "updatedAt": "2025-01-05T00:23:31Z",
    "author": {
      "login": "monilpat",
      "avatarUrl": "https://avatars.githubusercontent.com/u/15067321?v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qYA",
        "name": "enhancement",
        "color": "a2eeef",
        "description": "New feature or request"
      },
      {
        "id": "LA_kwDOMT5cIs8AAAAB2WU2Jw",
        "name": "agent-generated",
        "color": "FBCA04",
        "description": "For agent creation actions on pull requests, issues, and eventually milestones, releases etc."
      },
      {
        "id": "LA_kwDOMT5cIs8AAAAB2qdBFw",
        "name": "error handling",
        "color": "ededed",
        "description": null
      }
    ],
    "comments": []
  },
  {
    "id": "I_kwDOMT5cIs6lDFXx",
    "number": 1846,
    "title": "Implement more granular try-catch blocks in /plugin-coinbase to improve error handling",
    "body": "**Is your feature request related to a problem? Please describe.**\n\nThe current error handling in the /plugin-coinbase directory lacks granularity, making it difficult to identify specific failures in the transaction process.\n\n**Describe the solution you'd like**\n\nImplement more granular try-catch blocks throughout the /plugin-coinbase code to improve error handling and logging. This would allow for more detailed error messages and better debugging capabilities.\n\n**Code Example**\n\n```javascript\ntry {\n    // Code that may throw an error\n} catch (error) {\n    console.error('Specific error message:', error);\n    // Handle specific error\n}\n```\n\n**Describe alternatives you've considered**\n\nLeaving the current error handling as is, but this may lead to difficulty in troubleshooting issues.\n\n**Additional context**\n\nImproved error handling will enhance the reliability of the plugin and provide clearer insights during failures, ultimately leading to a better user experience.",
    "state": "CLOSED",
    "createdAt": "2025-01-05T00:11:25Z",
    "updatedAt": "2025-01-05T00:22:00Z",
    "author": {
      "login": "monilpat",
      "avatarUrl": "https://avatars.githubusercontent.com/u/15067321?v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qYA",
        "name": "enhancement",
        "color": "a2eeef",
        "description": "New feature or request"
      },
      {
        "id": "LA_kwDOMT5cIs8AAAAB2WU2Jw",
        "name": "agent-generated",
        "color": "FBCA04",
        "description": "For agent creation actions on pull requests, issues, and eventually milestones, releases etc."
      },
      {
        "id": "LA_kwDOMT5cIs8AAAAB2WVEGg",
        "name": "agent-interacted",
        "color": "1D76DB",
        "description": "For agent reactions to pull requests, issues, comments, etc."
      },
      {
        "id": "LA_kwDOMT5cIs8AAAAB2qdBFw",
        "name": "error handling",
        "color": "ededed",
        "description": null
      }
    ],
    "comments": [
      {
        "id": "IC_kwDOMT5cIs6ZRTem",
        "author": "monilpat",
        "body": "Implementing more granular try-catch blocks is a crucial enhancement for our error handling in the /plugin-coinbase directory. This will significantly improve our ability to debug and maintain the code by providing clearer insights into specific failures. Let's make this change happen!"
      }
    ]
  },
  {
    "id": "I_kwDOMT5cIs6lDEf3",
    "number": 1844,
    "title": "Implement more granular try-catch blocks in /plugin-coinbase to improve error handling",
    "body": "**Is your feature request related to a problem? Please describe.**\nThe current error handling in the /plugin-coinbase directory lacks granularity, making it difficult to identify specific failures in the transaction process.\n\n**Describe the solution you'd like**\nImplement more granular try-catch blocks throughout the /plugin-coinbase code to improve error handling and logging. This would allow for more detailed error messages and better debugging capabilities.\n\n**Code Example**\n\n```javascript\ntry {\n    // Code that may throw an error\n} catch (error) {\n    console.error('Specific error message:', error);\n    // Handle specific error\n}\n```\n\n**Describe alternatives you've considered**\nLeaving the current error handling as is, but this may lead to difficulty in troubleshooting issues.\n\n**Additional context**\nImproved error handling will enhance the reliability of the plugin and provide clearer insights during failures, ultimately leading to a better user experience.",
    "state": "OPEN",
    "createdAt": "2025-01-04T23:59:32Z",
    "updatedAt": "2025-01-05T00:10:33Z",
    "author": {
      "login": "monilpat",
      "avatarUrl": "https://avatars.githubusercontent.com/u/15067321?v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qYA",
        "name": "enhancement",
        "color": "a2eeef",
        "description": "New feature or request"
      },
      {
        "id": "LA_kwDOMT5cIs8AAAAB2WU2Jw",
        "name": "agent-generated",
        "color": "FBCA04",
        "description": "For agent creation actions on pull requests, issues, and eventually milestones, releases etc."
      },
      {
        "id": "LA_kwDOMT5cIs8AAAAB2WVEGg",
        "name": "agent-interacted",
        "color": "1D76DB",
        "description": "For agent reactions to pull requests, issues, comments, etc."
      },
      {
        "id": "LA_kwDOMT5cIs8AAAAB2qdBFw",
        "name": "error handling",
        "color": "ededed",
        "description": null
      }
    ],
    "comments": [
      {
        "id": "IC_kwDOMT5cIs6ZRSAJ",
        "author": "monilpat",
        "body": "Implementing more granular try-catch blocks will significantly enhance our error handling capabilities in the /plugin-coinbase directory. This change will provide better insights into transaction failures, making debugging much easier. Let's move forward with this enhancement!"
      }
    ]
  },
  {
    "id": "I_kwDOMT5cIs6lDEcG",
    "number": 1843,
    "title": "Add more granular try catches in /plugin-coinbase",
    "body": "## Feature Request\n\n**Is your feature request related to a problem? Please describe.**\nThe current error handling in the /plugin-coinbase directory lacks granularity, making it difficult to identify specific failures in the transaction process.\n\n**Describe the solution you'd like**\nImplement more granular try-catch blocks throughout the /plugin-coinbase code to improve error handling and logging. This would allow for more detailed error messages and better debugging capabilities.\n\n**Code Example**\n\n```javascript\ntry {\n    // Code that may throw an error\n} catch (error) {\n    console.error('Specific error message:', error);\n    // Handle specific error\n}\n```\n\n**Describe alternatives you've considered**\nLeaving the current error handling as is, but this may lead to difficulty in troubleshooting issues.\n\n**Additional context**\nImproved error handling will enhance the reliability of the plugin and provide clearer insights during failures, ultimately leading to a better user experience.",
    "state": "CLOSED",
    "createdAt": "2025-01-04T23:58:25Z",
    "updatedAt": "2025-01-05T00:00:43Z",
    "author": {
      "login": "monilpat",
      "avatarUrl": "https://avatars.githubusercontent.com/u/15067321?v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAAB2WU2Jw",
        "name": "agent-generated",
        "color": "FBCA04",
        "description": "For agent creation actions on pull requests, issues, and eventually milestones, releases etc."
      },
      {
        "id": "LA_kwDOMT5cIs8AAAAB2kGfpw",
        "name": "feature",
        "color": "ededed",
        "description": null
      },
      {
        "id": "LA_kwDOMT5cIs8AAAAB2qdBFw",
        "name": "error handling",
        "color": "ededed",
        "description": null
      }
    ],
    "comments": []
  },
  {
    "id": "I_kwDOMT5cIs6lDEZH",
    "number": 1842,
    "title": "Add more granular try catches in /plugin-coinbase",
    "body": "## Feature Request\n\n**Is your feature request related to a problem? Please describe.**\nThe current error handling in the /plugin-coinbase directory lacks granularity, making it difficult to identify specific failures in the transaction process.\n\n**Describe the solution you'd like**\nImplement more granular try-catch blocks throughout the /plugin-coinbase code to improve error handling and logging. This would allow for more detailed error messages and better debugging capabilities.\n\n**Code Example**\n\n```javascript\ntry {\n    // Code that may throw an error\n} catch (error) {\n    console.error('Specific error message:', error);\n    // Handle specific error\n}\n```\n\n**Describe alternatives you've considered**\nLeaving the current error handling as is, but this may lead to difficulty in troubleshooting issues.\n\n**Additional context**\nImproved error handling will enhance the reliability of the plugin and provide clearer insights during failures, ultimately leading to a better user experience.",
    "state": "CLOSED",
    "createdAt": "2025-01-04T23:57:30Z",
    "updatedAt": "2025-01-05T00:00:52Z",
    "author": {
      "login": "monilpat",
      "avatarUrl": "https://avatars.githubusercontent.com/u/15067321?v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qYA",
        "name": "enhancement",
        "color": "a2eeef",
        "description": "New feature or request"
      },
      {
        "id": "LA_kwDOMT5cIs8AAAAB2WU2Jw",
        "name": "agent-generated",
        "color": "FBCA04",
        "description": "For agent creation actions on pull requests, issues, and eventually milestones, releases etc."
      },
      {
        "id": "LA_kwDOMT5cIs8AAAAB2qdBFw",
        "name": "error handling",
        "color": "ededed",
        "description": null
      }
    ],
    "comments": []
  },
  {
    "id": "I_kwDOMT5cIs6lDDCp",
    "number": 1841,
    "title": "elizaos/plugin-ferepro missing source and failing build",
    "body": "```\r\n@elizaos/plugin-ferepro:build:\r\n@elizaos/plugin-ferepro:build: > @elizaos/plugin-ferepro@0.1.7-alpha.2 build /mnt/data1/nix/time/2024/12/31/cloud-depl\\\r\noyment-eliza/packages/plugin-ferePro\r\n@elizaos/plugin-ferepro:build: > tsup --format esm --dts\r\n@elizaos/plugin-ferepro:build:\r\n@elizaos/core:build:\r\n@elizaos/core:build: > @elizaos/core@0.1.7 build /mnt/data1/nix/time/2024/12/31/cloud-deployment-eliza/packages/core\r\n@elizaos/core:build: > tsup --format esm --dts\r\n@elizaos/core:build:\r\ncreate-eliza-app:build:\r\ncreate-eliza-app:build: > create-eliza-app@0.1.7-alpha.2 build /mnt/data1/nix/time/2024/12/31/cloud-deployment-eliza/p\\\r\nackages/create-eliza-app\r\ncreate-eliza-app:build: > unbuild\r\ncreate-eliza-app:build:\r\n@elizaos/plugin-ferepro:build: No input files, try \"tsup <your-file>\" instead\r\n@elizaos/plugin-ferepro:build:  ELIFECYCLE  Command failed with exit code 1.```",
    "state": "OPEN",
    "createdAt": "2025-01-04T23:32:19Z",
    "updatedAt": "2025-01-04T23:32:19Z",
    "author": {
      "login": "jmikedupont2",
      "avatarUrl": "https://avatars.githubusercontent.com/u/16427113?u=2bdad12714de646188f98a07736a54f765ad5e3b&v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qWA",
        "name": "bug",
        "color": "d73a4a",
        "description": "Something isn't working"
      }
    ],
    "comments": []
  },
  {
    "id": "I_kwDOMT5cIs6lDAXW",
    "number": 1838,
    "title": "Broken FAQ link in Contributing.MD",
    "body": "**Describe the bug**\r\n\r\nThe FAQ link in CONTRIBUTING.md returns a 404.\r\n\r\nhttps://github.com/elizaOS/eliza/blob/main/CONTRIBUTING.md?plain=1#L82 \r\n\r\n**To Reproduce**\r\n\r\n- Head to [CONTRIBUTING.md](https://github.com/elizaOS/eliza/blob/main/CONTRIBUTING.md#getting-help) and click the FAQ link\r\n- Retuens a 404 - as it is pointing at docs/community/faq.md which doesn't exist\r\n\r\n**Expected behavior**\r\n\r\nShould link through to [docs/docs/faq.md](https://github.com/elizaOS/eliza/blob/main/docs/docs/faq.md)\r\n\r\nor maybe [docs/community/faq-and-support.md](https://github.com/elizaOS/eliza/blob/main/docs/community/faq-and-support.md)",
    "state": "OPEN",
    "createdAt": "2025-01-04T22:45:25Z",
    "updatedAt": "2025-01-05T21:15:49Z",
    "author": {
      "login": "MacsDickinson",
      "avatarUrl": "https://avatars.githubusercontent.com/u/1135182?u=008184fd676416abe45a7f0eaa52a88e17da1a7e&v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qWA",
        "name": "bug",
        "color": "d73a4a",
        "description": "Something isn't working"
      }
    ],
    "comments": [
      {
        "id": "IC_kwDOMT5cIs6ZROwZ",
        "author": "github-actions",
        "body": "Hello @MacsDickinson! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      },
      {
        "id": "IC_kwDOMT5cIs6ZRStl",
        "author": "manotoor",
        "body": "adding fix for this"
      },
      {
        "id": "IC_kwDOMT5cIs6ZRSuV",
        "author": "manotoor",
        "body": "Can someone assign to me"
      },
      {
        "id": "IC_kwDOMT5cIs6ZRTRt",
        "author": "MacsDickinson",
        "body": "hey, put a PR here for it too https://github.com/elizaOS/eliza/pull/1839"
      },
      {
        "id": "IC_kwDOMT5cIs6ZSddO",
        "author": "manotoor",
        "body": "this has been fixed, please mark a appropriately"
      }
    ]
  }
]
