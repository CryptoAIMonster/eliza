[
  {
    "id": "I_kwDOMT5cIs6kZcT6",
    "number": 1439,
    "title": "Bug: generateText is ignoring dynamic parameters due to a hard-coded model class",
    "body": "**Is your feature request (or bug) related to a problem? Please describe.**\r\n\r\nIn the `generateText` function, the `model class` is currently hard-coded(gpt-4o), which prevents dynamically switching to different models based on incoming parameters. This reduces flexibility and can increase development complexity in scenarios where different models are needed.\r\n\r\n**Describe the solution you'd like**\r\n\r\n- Remove the hard-coded `model class` reference in the `generateText` function and instead use a model name/type passed in as a function parameter or configuration.\r\n- Ensure there is a sensible default value to maintain compatibility with existing functionality or cases where a specific model is not provided.\r\n\r\n**Describe alternatives you've considered**\r\n\r\n- Leaving it as is would require manual code changes to switch models in different scenarios, which is not ideal.\r\n- Introducing a separate function to handle switching model classes could lead to redundant logic and increase maintenance overhead.\r\n\r\n**Additional context**\r\n\r\n- **Risks**: This change is minor, but it’s important to check if other parts of the code depend on the old hard-coded logic.\r\n- **Testing**:\r\n  - Test with multiple model types to confirm that the function correctly switches to the specified model.",
    "state": "OPEN",
    "createdAt": "2024-12-24T16:59:30Z",
    "updatedAt": "2024-12-24T16:59:30Z",
    "author": {
      "login": "FWangZil",
      "avatarUrl": "https://avatars.githubusercontent.com/u/20198261?u=acffb003595218f621d5bdd6d3ccc31caa784d5b&v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qWA",
        "name": "bug",
        "color": "d73a4a",
        "description": "Something isn't working"
      }
    ],
    "comments": []
  },
  {
    "id": "I_kwDOMT5cIs6kYkBp",
    "number": 1434,
    "title": "Add Liquid Staking Action to the Solana Plugin",
    "body": "\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently, there are various liquid staking protocols on Solana, but users or developers often need to build dedicated front-end solutions or switch between multiple platforms to compare APYs and select the appropriate protocol before staking. This process is tedious and increases front-end development complexity, making it cumbersome for users.\r\n\r\n**Describe the solution you'd like**\r\n\r\n- Add the ability for liquid staking to the existing ElizaOS Solana plugin, simplifying the process of building staking requests for users without requiring specialized front-end logic.\r\n\r\n**Describe alternatives you've considered**\r\n\r\n- Continue relying on each protocol’s custom front-end or having developers integrate multiple protocols manually. This leads to high complexity and development cost.  \r\n- Have users manually compare different platforms’ APYs, which can be error-prone and inconvenient.\r\n\r\n**Additional context**\r\n\r\n",
    "state": "OPEN",
    "createdAt": "2024-12-24T14:58:25Z",
    "updatedAt": "2024-12-24T14:58:25Z",
    "author": {
      "login": "FWangZil",
      "avatarUrl": "https://avatars.githubusercontent.com/u/20198261?u=acffb003595218f621d5bdd6d3ccc31caa784d5b&v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qYA",
        "name": "enhancement",
        "color": "a2eeef",
        "description": "New feature or request"
      }
    ],
    "comments": []
  },
  {
    "id": "I_kwDOMT5cIs6kXox1",
    "number": 1431,
    "title": "DenyLoginSubtask - TWITTER",
    "body": "**Describe the bug**\r\n\r\n ⛔ Login attempt failed: Authentication error: DenyLoginSubtask\"\r\n\r\n\r\n**To Reproduce**\r\n\r\nRun the server with version  (v0.1.7-alpha.1) \r\n\r\nEven though my twitter creds are correct its throwing error In twitter I can see that a new login message.\r\n\r\n**Expected behavior**\r\n\r\nShould login to twitter and post tweets\r\n\r\n**Screenshots**\r\n![image](https://github.com/user-attachments/assets/56a226ca-b766-4c26-94a1-9a5243e82d2c)\r\n\r\n",
    "state": "OPEN",
    "createdAt": "2024-12-24T11:44:01Z",
    "updatedAt": "2024-12-24T11:44:01Z",
    "author": {
      "login": "didintern",
      "avatarUrl": "https://avatars.githubusercontent.com/u/8111964?u=bf7a296d838d185cee45d11f1b3d0101b9a4a794&v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qWA",
        "name": "bug",
        "color": "d73a4a",
        "description": "Something isn't working"
      }
    ],
    "comments": []
  },
  {
    "id": "I_kwDOMT5cIs6kVlT3",
    "number": 1421,
    "title": "Add Chat Back to Terminal",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nI have noticed that the chat has been removed from the terminal.  This has caused frustration, as it now takes a separate terminal, another command start:client, and several clicks to get testing and debugging and we have to use the browser client for debugging.  When switching back and forward between different character files, for testing, we have to often restart that web client.  This has slowed down the development/debugging process considerably. \r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\n\r\n**Describe the solution you'd like**\r\nPlease return the chat to the terminal or perhaps add a start:terminal or similar, to allow the chat in the terminal, for those who want it.  In that case, we should still be able to pass a --characters parameter...\r\n<!-- A clear and concise description of what you want to happen. -->\r\n\r\n**Describe alternatives you've considered**\r\nBrowser client, requires several clicks and steps, just to test a prompt...which is accelerating carpal tunnel syndrome...:)\r\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\r\n\r\n**Additional context**\r\nThanks for consideration.\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\n",
    "state": "OPEN",
    "createdAt": "2024-12-24T03:52:12Z",
    "updatedAt": "2024-12-24T04:21:12Z",
    "author": {
      "login": "harperaa",
      "avatarUrl": "https://avatars.githubusercontent.com/u/1330944?v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qYA",
        "name": "enhancement",
        "color": "a2eeef",
        "description": "New feature or request"
      }
    ],
    "comments": []
  },
  {
    "id": "I_kwDOMT5cIs6kVYth",
    "number": 1419,
    "title": "Add Tagalog Translation on README",
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nThe project currently lacks Tagalog language support in its documentation. While there are translations for several other languages, Filipino developers cannot read the documentation in their native language. This is particularly important as it will improve accessibility and inclusivity for the growing tech community in the Philippines.\r\n\r\n**Describe the solution you'd like**\r\n\r\nAdd a complete Tagalog translation of the main README.md as README_TG.md, including:\r\n- Full translation of all sections, including features, installation instructions, and usage guidelines\r\n- Proper formatting to ensure readability\r\n- Addition of Tagalog (Tagalog) to the language selector at the top of all README files\r\n- Maintenance of all existing functionality (links, images, code blocks)\r\n\r\n**Describe alternatives you've considered**\r\n\r\nUsing browser-based translation tools (like Chrome's translate feature) – inadequate because automated translations may not accurately capture technical terms and nuances in Tagalog.\r\n\r\n**Additional context**\r\n\r\nTagalog is spoken by millions of Filipinos and is one of the primary languages in the Philippines.\r\nThe translation should follow the same pattern as other language translations in the repo (README_XX.md format).\r\nThis addition will make the project more accessible to the Filipino developer community.\r\n",
    "state": "OPEN",
    "createdAt": "2024-12-24T02:43:14Z",
    "updatedAt": "2024-12-24T02:43:14Z",
    "author": {
      "login": "harveyjavier",
      "avatarUrl": "https://avatars.githubusercontent.com/u/28330063?u=9d09b6507e0977b29842defa768a85495ab181e4&v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qYA",
        "name": "enhancement",
        "color": "a2eeef",
        "description": "New feature or request"
      }
    ],
    "comments": []
  }
]
