[
  {
    "id": "I_kwDOMT5cIs6ji1o-",
    "number": 1151,
    "title": "REQUIRED_NODE_VERSION: No such file",
    "body": "**Describe the bug**\r\n\r\nFollowing directions in README.md with `sh scripts/start.sh` on Ubuntu causes an error:\r\n\r\nscripts/start.sh: 6: cannot open REQUIRED_NODE_VERSION: No such file\r\n\r\n**To Reproduce**\r\n\r\nEnvironment: Ubuntu 24.04 LTS\r\n1. `sh scripts/start.sh`\r\n\r\n**Expected behavior**\r\n\r\nNo error regarding the variable \"REQUIRED_NODE_VERSION\"\r\n\r\n**Screenshots**\r\n\r\n<img width=\"1144\" alt=\"image\" src=\"https://github.com/user-attachments/assets/4280583e-0dc2-4c49-833c-84faaae86412\" />\r\n\r\n**Additional context**\r\n\r\nThis is a simple issue caused by the shell script being executed with dash instead of bash.\r\n",
    "state": "OPEN",
    "createdAt": "2024-12-17T03:04:39Z",
    "updatedAt": "2024-12-17T03:23:11Z",
    "author": {
      "login": "tcotten-scrypted",
      "avatarUrl": "https://avatars.githubusercontent.com/u/113052533?u=23e62842485a8c6647acdecb62cb97b898299ad3&v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qWA",
        "name": "bug",
        "color": "d73a4a",
        "description": "Something isn't working"
      }
    ],
    "comments": [
      {
        "id": "IC_kwDOMT5cIs6X1pxq",
        "author": "tcotten-scrypted",
        "body": "On Ubuntu, executing with bash directly instead of dash solves the issue; despite the sample command from the README.md"
      }
    ]
  },
  {
    "id": "I_kwDOMT5cIs6jifw9",
    "number": 1146,
    "title": "pnpm install fails on m1 mac ",
    "body": "I've spent the last 6 hours trying to get around this\r\n\r\nsame error with both: \r\n`pnpm install` and `pnpm install -w --include=optional sharp`\r\n\r\n```\r\n│   LIBTOOL-STATIC Release/opus.a\r\n│   CXX(target) Release/obj.target/opus/src/node-opus.o\r\n│ In file included from <built-in>:495:\r\n│ <command line>:19:14: warning: ISO C99 requires whitespace after the macro name [-Wc99-extensions]\r\n│    19 | #define POSIX,__STDC_FORMAT_MACROS 1\r\n│       |              ^\r\n│ In file included from ../src/node-opus.cc:1:\r\n│ /Users/santekotturi/Developer/forecast/eliza/node_modules/node-addon-api/napi.h:14:10: fatal error: 'functional' …\r\n│    14 | #include <functional>\r\n│       |          ^~~~~~~~~~~~\r\n│ 1 warning and 1 error generated.\r\n│ make: *** [Release/obj.target/opus/src/node-opus.o] Error 1\r\n│ gyp ERR! build error \r\n│ gyp ERR! stack Error: `make` failed with exit code: 2\r\n│ gyp ERR! stack at ChildProcess.<anonymous> (/Users/santekotturi/.local/share/pnpm/global/5/.pnpm/pnpm@9.9.0/node_…\r\n│ gyp ERR! System Darwin 24.1.0\r\n│ gyp ERR! command \"/Users/santekotturi/.nvm/versions/node/v23.4.0/bin/node\" \"/Users/santekotturi/.local/share/pnpm…\r\n│ gyp ERR! cwd /Users/santekotturi/Developer/forecast/eliza/node_modules/@discordjs/opus\r\n│ gyp ERR! node -v v23.4.0\r\n│ gyp ERR! node-gyp -v v10.1.0\r\n│ gyp ERR! not ok \r\n│ node-pre-gyp ERR! build error \r\n│ node-pre-gyp ERR! stack Error: Failed to execute '/Users/santekotturi/.nvm/versions/node/v23.4.0/bin/node /Users/…\r\n│ node-pre-gyp ERR! stack     at ChildProcess.<anonymous> (/Users/santekotturi/Developer/forecast/eliza/node_module…\r\n│ node-pre-gyp ERR! stack     at ChildProcess.emit (node:events:513:28)\r\n│ node-pre-gyp ERR! stack     at maybeClose (node:internal/child_process:1101:16)\r\n│ node-pre-gyp ERR! stack     at ChildProcess._handle.onexit (node:internal/child_process:305:5)\r\n│ node-pre-gyp ERR! System Darwin 24.1.0\r\n│ node-pre-gyp ERR! command \"/Users/santekotturi/.nvm/versions/node/v23.4.0/bin/node\" \"/Users/santekotturi/Develope…\r\n│ node-pre-gyp ERR! cwd /Users/santekotturi/Developer/forecast/eliza/node_modules/@discordjs/opus\r\n│ node-pre-gyp ERR! node -v v23.4.0\r\n│ node-pre-gyp ERR! node-pre-gyp -v v0.4.5\r\n│ node-pre-gyp ERR! not ok \r\n```\r\n\r\nalways using `rm -rf node_modules & rm pnpm-lock.yaml` between each try.\r\n\r\nnode v23.4.0\r\ntried downgrading to v20.x \r\npnpm v9.9.0\r\n\r\nalso tried `brew install opus`\r\nmacOS 15.1 \r\nXCode 16.2\r\n\r\non:\r\n`% git status >> HEAD detached at v0.1.6-alpha.1`\r\n\r\nPotentially related to:\r\nhttps://github.com/elizaos/eliza/issues/1041\r\nhttps://github.com/elizaos/eliza/issues/215\r\n",
    "state": "OPEN",
    "createdAt": "2024-12-17T01:28:52Z",
    "updatedAt": "2024-12-17T04:05:52Z",
    "author": {
      "login": "santekotturi",
      "avatarUrl": "https://avatars.githubusercontent.com/u/4960284?u=bd2843c83a0f02a40a1375b264e6609a5444c08a&v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qWA",
        "name": "bug",
        "color": "d73a4a",
        "description": "Something isn't working"
      }
    ],
    "comments": [
      {
        "id": "IC_kwDOMT5cIs6X1UvO",
        "author": "oxSaturn",
        "body": "Have you tried `xcode-select --install` to have C++ compiler installed? I'm on m2, thought I ran into a similar issue (don't remember the exact issue) when I was trying eliza first time, and running `xcode-select --install` got it fixed for me as far as I can remember."
      },
      {
        "id": "IC_kwDOMT5cIs6X1y2O",
        "author": "santekotturi",
        "body": "Yea, I ran that, I've got a macos 15.2 update waiting for me, maybe that plays better with Xcode 16.2... will report back \r\n"
      }
    ]
  },
  {
    "id": "I_kwDOMT5cIs6jiYy4",
    "number": 1145,
    "title": "Discord agents knock each other out of VC",
    "body": "**Describe the bug**\r\n\r\nWhen running two agents in the same client one will join the discord voice channel and then when 2nd agent joins it kicks the first agent out of discord\r\n\r\n**Additional context**\r\n\r\n- whichever character is listed last is the one that stays in the voice channel\r\n- the same thing happens even if sending the agents to different voice channels. \r\n- only tested from 1 discord server, 2 unique servers may produce a different outcome",
    "state": "OPEN",
    "createdAt": "2024-12-17T00:58:56Z",
    "updatedAt": "2024-12-17T01:01:00Z",
    "author": {
      "login": "vincentskele",
      "avatarUrl": "https://avatars.githubusercontent.com/u/147941271?u=7d01a4b50ee427df19e9b31bb0273500b71f72d0&v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qWA",
        "name": "bug",
        "color": "d73a4a",
        "description": "Something isn't working"
      }
    ],
    "comments": []
  },
  {
    "id": "I_kwDOMT5cIs6jiH9M",
    "number": 1142,
    "title": "Support for building monorepo with git dependencies using pnpm and nix",
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nWhen trying to build a pnpm monorepo using Nix's buildNpmPackage that includes git dependencies (specifically @discordjs/opus), the build fails due to git access restrictions in the Nix build environment. The current workarounds involve either modifying package.json or pre-fetching git dependencies, both of which are not ideal solutions for maintaining the project.\r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\nA built-in way to handle git dependencies in buildNpmPackage that:\r\n\r\n 1. Automatically fetches git dependencies using fetchgit during the build process\r\n 2. Maintains compatibility with pnpm workspaces and monorepo structure\r\n 3. Preserves the original package.json without requiring modifications\r\n 4. Works with trusted dependencies in pnpm\r\n\r\n**Describe alternatives you've considered**\r\n\r\n1. Manually pre-fetching git dependencies and placing them in node_modules\r\n2. Modifying package.json to use published versions instead of git dependencies\r\n3. Using mkDerivation instead of buildNpmPackage to handle the build process manually\r\n4. Creating a custom derivation to handle git dependencies before the main build\r\n\r\n**Additional context**\r\n\r\nThis issue particularly affects projects using Discord.js and similar packages that rely on git dependencies for native modules. The current workarounds either break the development workflow or require maintaining separate package configurations for Nix builds.\r\nExample of a failing build: \r\n\r\n`ERR_PNPM_LOCKFILE_CONFIG_MISMATCH Cannot proceed with the frozen installation. The current \"overrides\" configuration doesn't match the value found in the lockfile`\r\n",
    "state": "OPEN",
    "createdAt": "2024-12-16T23:53:28Z",
    "updatedAt": "2024-12-16T23:53:28Z",
    "author": {
      "login": "lessuselesss",
      "avatarUrl": "https://avatars.githubusercontent.com/u/179788364?v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qYA",
        "name": "enhancement",
        "color": "a2eeef",
        "description": "New feature or request"
      }
    ],
    "comments": []
  },
  {
    "id": "I_kwDOMT5cIs6jaRpB",
    "number": 1130,
    "title": "Feat: add github client to core agent",
    "body": "**Describe the solution you'd like**\r\nThis feature will allow agent interacting with github repository\r\n- Read all repository as agent's memory\r\n- Create pull request\r\n- Create commit",
    "state": "OPEN",
    "createdAt": "2024-12-16T07:35:25Z",
    "updatedAt": "2024-12-16T07:35:25Z",
    "author": {
      "login": "fibonacci998",
      "avatarUrl": "https://avatars.githubusercontent.com/u/38557844?u=4be79adf635975b0677c41fd0259defe61dfef3f&v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qYA",
        "name": "enhancement",
        "color": "a2eeef",
        "description": "New feature or request"
      }
    ],
    "comments": []
  }
]
