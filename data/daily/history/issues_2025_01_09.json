[
  {
    "id": "I_kwDOMT5cIs6lnuzl",
    "number": 2080,
    "title": "A CUDA error is thrown when using `llama_local` - ERR_PNPM_RECURSIVE_RUN_FIRST_FAIL, exit code 3221226505",
    "body": "**Describe the bug**\r\n\r\nA CUDA error is thrown when using `llama_local`\r\n\r\n**To Reproduce**\r\n\r\n`Windows 10`\r\n`wsl2`\r\n`node -v` = `v23.5.0`\r\n`python --version` = `Python 3.12.8`\r\n\r\nfollowed [Quick Start](https://elizaos.github.io/eliza/docs/quickstart/):\r\n\r\n1. checkout tag `v0.1.7`\r\n2. `pnpm install --no-frozen-lockfile`\r\n3. `pnpm build`\r\n4. `.env` setup for `llama_local`: `XAI_MODEL=meta-llama/Meta-Llama-3.1-70B-Instruct-Turbo` as described [here](https://elizaos.github.io/eliza/docs/quickstart/#for-llama_local-inference)\r\n5. Changed `modelProvider` to `llama_local` in trump.character.json\r\n6. Run with `pnpm start --character=\"characters/trump.character.json\"`\r\n7. Start client with `pnpm start:client`\r\n8. Type `hi` in chat\r\n\r\n**Expected behavior**\r\n\r\nAn indication of what the error is exactly. I also changing model configuration but that doesn't seem to be picked up. I'm at a loss.\r\n\r\n**Screenshot**\r\n![image](https://github.com/user-attachments/assets/27587635-4329-4b21-a79a-9da20cde4a17)\r\n\r\n**Additional context**\r\n\r\n```\r\n[\"◎ Generating text...\"] \r\n\r\n ℹ INFORMATIONS\r\n   Generating text with options:\r\n   {\"modelProvider\":\"llama_local\",\"model\":\"large\"} \r\n\r\n ℹ INFORMATIONS\r\n   Selected model:\r\n   NousResearch/Hermes-3-Llama-3.1-8B-GGUF/resolve/main/Hermes-3-Llama-3.1-8B.Q8_0.gguf?download=true \r\n\r\n [\"ℹ Model not initialized, starting initialization...\"] \r\n\r\n [\"ℹ Checking model file...\"] \r\n\r\n [\"⚠ Model already exists.\"] \r\n\r\n [\"ℹ LlamaService: CUDA detected, using GPU acceleration\"] \r\n\r\n [\"ℹ Initializing Llama instance...\"] \r\n\r\n(node:30868) ExperimentalWarning: `--experimental-loader` may be removed in the future; instead use `register()`:\r\n--import 'data:text/javascript,import { register } from \"node:module\"; import { pathToFileURL } from \"node:url\"; register(\"ts-node/esm\", pathToFileURL(\"./\"));'\r\n(Use `node --trace-warnings ...` to show where the warning was created)\r\n(node:30868) [DEP0180] DeprecationWarning: fs.Stats constructor is deprecated.\r\n(Use `node --trace-deprecation ...` to show where the warning was created)\r\nggml_cuda_init: GGML_CUDA_FORCE_MMQ:    no\r\nggml_cuda_init: GGML_CUDA_FORCE_CUBLAS: no\r\nggml_cuda_init: found 1 CUDA devices:\r\n  Device 0: NVIDIA GeForce RTX 3090, compute capability 8.6, VMM: yes\r\n [\"ℹ Creating JSON schema grammar...\"] \r\n\r\n [\"ℹ Loading model...\"] \r\n\r\n [\"ℹ Creating context and sequence...\"] \r\n\r\n [\"✓ Model initialization complete\"] \r\n\r\nC:\\Users\\me\\Documents\\Projects\\eliza\\node_modules\\node-llama-cpp\\llama\\llama.cpp\\ggml\\src\\ggml-cuda.cu:70: CUDA error\r\nC:\\Users\\me\\Documents\\Projects\\eliza\\agent:\r\n ERR_PNPM_RECURSIVE_RUN_FIRST_FAIL  @elizaos/agent@0.1.7 start: `node --loader ts-node/esm src/index.ts \"--isRoot\" \"--character=characters/trump.character.json\"`\r\nExit status 3221226505\r\n ELIFECYCLE  Command failed with exit code 3221226505.\r\n```\r\n",
    "state": "OPEN",
    "createdAt": "2025-01-09T20:00:04Z",
    "updatedAt": "2025-01-09T20:00:48Z",
    "author": {
      "login": "ropstah",
      "avatarUrl": "https://avatars.githubusercontent.com/u/5072557?u=2c70913826144fbde832988c73eb94f8161fbed2&v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qWA",
        "name": "bug",
        "color": "d73a4a",
        "description": "Something isn't working"
      }
    ],
    "comments": [
      {
        "id": "IC_kwDOMT5cIs6Z2Sge",
        "author": "github-actions",
        "body": "Hello @ropstah! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      }
    ]
  },
  {
    "id": "I_kwDOMT5cIs6lniev",
    "number": 2078,
    "title": "Cannot read properties of undefined (reading 'actions') trying to test the whatsapp plugin ",
    "body": "**Describe the bug**\r\nI am getting an error when trying to add whatsapp plugin \r\nCannot read properties of undefined (reading 'actions')\r\n\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\n\r\n`{\r\n  \"name\": \"vybz\",\r\n  \"modelProvider\": \"openai\",\r\n  \"clients\": [],\r\n  \"plugins\": [\r\n    \"plugins\": [\"@elizaos/plugin-whatsapp\"],   // <--- Correct package\r\n  ]\r\n}.\r\n\r\n\r\n// <--- and create an instance of it in  createAgent\r\nconst whatsappPlugin = new WhatsAppPlugin({\r\n        accessToken: getSecret(character, \"WHATSAPP_ACCESS_TOKEN\"),\r\n        phoneNumberId: getSecret(character, \"WHATSAPP_PHONE_NUMBER_ID\"),\r\n        webhookVerifyToken: getSecret(\r\n            character,\r\n            \"WHATSAPP_WEBHOOK_VERIFY_TOKEN\"\r\n        ),\r\n        businessAccountId: getSecret(character, \"WHATSAPP_BUSINESS_ACCOUNT_ID\"),\r\n     });`\r\n\r\n<!-- Steps to reproduce the behavior. -->\r\n\r\n**Expected behavior**\r\n\r\nI am thinking that the plugin should be a client instead but i am not 100 % sure or the actions need to be defined\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n**Screenshots**\r\n\r\n<img width=\"587\" alt=\"Screenshot 2025-01-09 at 2 19 32 PM\" src=\"https://github.com/user-attachments/assets/306f058c-15bc-4254-ad50-103a7e2d9e9e\" />\r\n\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n\r\n",
    "state": "OPEN",
    "createdAt": "2025-01-09T19:27:27Z",
    "updatedAt": "2025-01-09T19:28:05Z",
    "author": {
      "login": "oscody",
      "avatarUrl": "https://avatars.githubusercontent.com/u/24750008?u=2c95b9b9c5ca5b83293df0b54cf17927193b72fd&v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qWA",
        "name": "bug",
        "color": "d73a4a",
        "description": "Something isn't working"
      }
    ],
    "comments": [
      {
        "id": "IC_kwDOMT5cIs6Z2FTQ",
        "author": "github-actions",
        "body": "Hello @oscody! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      }
    ]
  },
  {
    "id": "I_kwDOMT5cIs6lncp8",
    "number": 2077,
    "title": "Nillion nilDB Plugin",
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nI would like to add a new feature that allows data to be uploaded and retrieved to and from the [Nillion network](https://nillion.com/) nilDB.\r\n\r\n**Describe the solution you'd like**\r\n\r\nThe nillion plugin enables integrates storing and retrieving data from the decentralized nilDB. nilDB is backed by secure multiparty computation (MPC) and this plugin handles everything needed to interact with nilDB.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nN/A\r\n\r\n**Additional context**\r\n\r\nN/A",
    "state": "OPEN",
    "createdAt": "2025-01-09T19:13:55Z",
    "updatedAt": "2025-01-09T19:14:20Z",
    "author": {
      "login": "jimouris",
      "avatarUrl": "https://avatars.githubusercontent.com/u/7729748?u=28aa4afe0b6513c257e656bc0f1ff1d7ab9d9f3c&v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qYA",
        "name": "enhancement",
        "color": "a2eeef",
        "description": "New feature or request"
      }
    ],
    "comments": [
      {
        "id": "IC_kwDOMT5cIs6Z1_vM",
        "author": "github-actions",
        "body": "Hello @jimouris! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      }
    ]
  },
  {
    "id": "I_kwDOMT5cIs6lnbbg",
    "number": 2076,
    "title": "Bot Fails to Process Telegram Messages from Other Bots Despite shouldIgnoreBotMessages: false Setting",
    "body": "**Describe the bug**\r\n\r\nThe bot does not read or receive Telegram bot messages, even though the setting `clientConfig.telegram.shouldIgnoreBotMessages` is set to `false`.\r\n\r\n**To Reproduce**\r\n\r\n1. Configure the bot with the following settings:\r\n   ```json\r\n   clientConfig: {\r\n       telegram: {\r\n           shouldIgnoreBotMessages: false,\r\n       },\r\n   }\r\n\r\n\t2.\tStart the bot using the pnpm i && pnpm start command.\r\n\t3.\tSend a message from another Telegram bot to the configured bot.\r\n\t4.\tObserve that the bot does not process or respond to the message.\r\n\r\nExpected behavior\r\n\r\nThe bot should receive and process messages from other Telegram bots when shouldIgnoreBotMessages is explicitly set to false.\r\n\r\nScreenshots\r\n\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n\r\n\r\nAdditional context\r\n\r\nLogs during startup and execution indicate no specific errors regarding message handling:\r\n\t•\tInitialization appears successful with services like browser, image_description, and telegram being registered and started.\r\n\t•\tThe bot successfully launches and binds to the correct Telegram username .\r\n\t•\tHowever, the bot does not respond to messages from other bots\r\n\r\nThese issues might suggest:\r\n\t1.\tThe Telegram client is mishandling bot-specific messages despite the configuration.\r\n\t2.\tA bug in how the message handler processes bot-originating messages.\r\n\r\n\r\nLogs for reference:\r\n\t•\tSetting initialization:\r\n```\r\nclientConfig: {\r\n    telegram: {\r\n        shouldIgnoreBotMessages: false,\r\n    },\r\n}\r\n```\r\n\r\nProposed steps for debugging:\r\n\t1.\tVerify if the Telegram client is correctly handling shouldIgnoreBotMessages.\r\n\t2.\tDebug the message handler to confirm it processes messages from other bots.\r\n\t3.\tEnsure the bot’s agent is correctly linked to the Telegram service.\r\n\t4.\tTest with verbose logging enabled for better insight into incoming message handling.\r\n\r\n",
    "state": "OPEN",
    "createdAt": "2025-01-09T19:10:39Z",
    "updatedAt": "2025-01-09T19:11:04Z",
    "author": {
      "login": "MbBrainz",
      "avatarUrl": "https://avatars.githubusercontent.com/u/35366788?u=2b90924a7cef15858f19483500c5f3031834e640&v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qWA",
        "name": "bug",
        "color": "d73a4a",
        "description": "Something isn't working"
      }
    ],
    "comments": [
      {
        "id": "IC_kwDOMT5cIs6Z1-f0",
        "author": "github-actions",
        "body": "Hello @MbBrainz! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      }
    ]
  },
  {
    "id": "I_kwDOMT5cIs6lie6Y",
    "number": 2056,
    "title": "anchor.BN is not a constructor ",
    "body": "**Describe the bug**\r\n\r\n```\r\nBN is not a constructor\r\n```\r\nhow to solve the BN problems when using anchor  on eliza framework?\r\n```\r\nimport * as anchor from \"@coral-xyz/anchor\";\r\nconst {BN} = anchor;\r\n```\r\nit's work on test\r\n\r\nif I change to use bn.js\r\nalso get another error \r\n```\r\n✘ [ERROR] Could not resolve \"bn.js\"\r\n\r\n    src/actions/borrow.ts:55:19:\r\n      55 │ import { BN } from \"bn.js\";\r\n         ╵                    ~~~~~~~\r\n```\r\n\r\n**To Reproduce**\r\n\r\n<!-- Steps to reproduce the behavior. -->\r\n\r\n**Expected behavior**\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n**Screenshots**\r\n\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
    "state": "CLOSED",
    "createdAt": "2025-01-09T09:26:15Z",
    "updatedAt": "2025-01-09T14:50:02Z",
    "author": {
      "login": "cxp-13",
      "avatarUrl": "https://avatars.githubusercontent.com/u/84974164?u=3b5b5c18f44af73f1e2f9921381fe2e800f474d1&v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAAB1o4rCg",
        "name": "Need Feedback",
        "color": "2365DD",
        "description": ""
      }
    ],
    "comments": [
      {
        "id": "IC_kwDOMT5cIs6ZwULR",
        "author": "cxp-13",
        "body": "Solved: modify `tsup.config.ts` file, add library name that have resolved problem\r\n```\r\nimport { defineConfig } from \"tsup\";\r\n\r\nexport default defineConfig({\r\n    entry: [\"src/index.ts\"],\r\n    outDir: \"dist\",\r\n    sourcemap: true,\r\n    clean: true,\r\n    format: [\"esm\"], // Ensure you're targeting CommonJS\r\n    external: [\r\n        \"dotenv\", // Externalize dotenv to prevent bundling\r\n        \"fs\", // Externalize fs to use Node.js built-in module\r\n        \"path\", // Externalize other built-ins if necessary\r\n        \"@reflink/reflink\",\r\n        \"@node-llama-cpp\",\r\n        \"https\",\r\n        \"http\",\r\n        \"agentkeepalive\",\r\n        \"safe-buffer\",\r\n        \"base-x\",\r\n        \"bs58\",\r\n        \"borsh\",\r\n        \"@solana/buffer-layout\",\r\n        \"stream\",\r\n        \"buffer\",\r\n        \"querystring\",\r\n        \"amqplib\",\r\n        \"bn.js\"   // <============== add here\r\n        // Add other modules you want to externalize\r\n    ],\r\n});\r\n\r\n```"
      },
      {
        "id": "IC_kwDOMT5cIs6Zzr9j",
        "author": "AIFlowML",
        "body": "Solved by modify tsup.config.ts\r\n@cxp-13 If i something that need to be noted send a PR please. "
      }
    ]
  },
  {
    "id": "I_kwDOMT5cIs6lg-vg",
    "number": 2050,
    "title": "fix: prevent forged public keys from using valid attestations as proof to deceive users",
    "body": "When a user wants to verify a log's signature using a public key, they first need to ensure that the public key was indeed generated within the TEE. This requires the user to verify the correctness of the remote attestation. However, users obtain the remote attestation by accessing the `/verifiable/attestation` endpoint, which calls the `generateAttestation` function. This function doesn't validate the agent ID and public key from the user's request, but instead directly generates a remote attestation. This doesn't prove that the public key corresponds to a private key generated within the TEE.\r\nAssuming TLS communication is established between the user and Eliza, I propose two correct approaches:\r\n\r\nThe user provides the agent_id, subject, and publicKey required for private key generation to the `generateAttestation` function. Within this function, a key pair is generated using deriveKey, and the resulting public key is compared with the publicKey parameter. If they match, an attestation report should be generated with the publicKey included in the report.\r\nSince Eliza has already stored the publicKey in the SQLite database during initial registerAgent, if we can ensure that the SQLite database content is encrypted and cannot be tampered with by software outside the TEE, the `generateAttestation` function can directly read the publicKey from the database using the agent_id, subject, and keypath. It then compares this with the publicKey in the user's request, and if they match, generates an attestation report.\r\n\r\nIn the current implementation, if someone sends a log to a user with a signature generated by a private key from outside the TEE, and provides this forged public key to the user, when the user requests an attestation through the `/verifiable/attestation` endpoint with the agent_id and corresponding public key, Eliza running in the TEE will directly send a valid attestation to the user. This allows users to be deceived\r\n\r\n_Originally posted by @lightning-li in https://github.com/elizaOS/eliza/pull/1369#discussion_r1908145251_\r\n            ",
    "state": "OPEN",
    "createdAt": "2025-01-09T05:45:07Z",
    "updatedAt": "2025-01-09T05:45:33Z",
    "author": {
      "login": "HashWarlock",
      "avatarUrl": "https://avatars.githubusercontent.com/u/64296537?u=1d8228a93c06c603e08d438677b3f736d6b1ab22&v=4"
    },
    "labels": [],
    "comments": []
  },
  {
    "id": "I_kwDOMT5cIs6lfybj",
    "number": 2040,
    "title": "Agent wont start even after twitter successful login",
    "body": "...",
    "state": "CLOSED",
    "createdAt": "2025-01-09T00:07:28Z",
    "updatedAt": "2025-01-09T00:17:26Z",
    "author": {
      "login": "DanielleMichelle",
      "avatarUrl": "https://avatars.githubusercontent.com/u/55834190?u=8718ba4dae1c9cf65cf4cc63c83195d51c662fd6&v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qWA",
        "name": "bug",
        "color": "d73a4a",
        "description": "Something isn't working"
      }
    ],
    "comments": []
  },
  {
    "id": "I_kwDOMT5cIs6lftJy",
    "number": 2037,
    "title": "runtime not inititiazed properly in ctor",
    "body": "**Describe the bug**\r\n\r\npackages/plugin-solana/src/providers/simulationSellingService.ts  \r\n\r\n<!-- Steps to reproduce the behavior. -->\r\nimport { SimulationSellingService } from \"@elizaos/plugin-solana\";\r\nimport { TrustScoreDatabase } from \"@elizaos/plugin-trustdb\";\r\n\r\n// use some already instantiated runtime\r\nconst trustScoreDb = new TrustScoreDatabase(runtime.databaseAdapter.db);\r\nconst simulationSellingService = new SimulationSellingService (runtime, trustScoreDb );   ==> should throw an undesired exception.\r\n\r\n**Expected behavior**\r\nnew SimulationSellingService(...) should not throw expection.\r\n\r\n![image](https://github.com/user-attachments/assets/e2450349-a556-4fc3-8d9c-aa8cdb2e7e13)",
    "state": "OPEN",
    "createdAt": "2025-01-08T23:48:22Z",
    "updatedAt": "2025-01-09T14:50:52Z",
    "author": {
      "login": "demoush",
      "avatarUrl": "https://avatars.githubusercontent.com/u/12614663?v=4"
    },
    "labels": [
      {
        "id": "LA_kwDOMT5cIs8AAAABrA0qWA",
        "name": "bug",
        "color": "d73a4a",
        "description": "Something isn't working"
      },
      {
        "id": "LA_kwDOMT5cIs8AAAAB0PEeUw",
        "name": "Needs Testing",
        "color": "84C035",
        "description": ""
      },
      {
        "id": "LA_kwDOMT5cIs8AAAAB1o4rCg",
        "name": "Need Feedback",
        "color": "2365DD",
        "description": ""
      }
    ],
    "comments": [
      {
        "id": "IC_kwDOMT5cIs6Ztszw",
        "author": "github-actions",
        "body": "Hello @demoush! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      }
    ]
  }
]
